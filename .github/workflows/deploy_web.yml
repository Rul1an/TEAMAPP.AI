name: Deploy Web (Netlify)

on:
  push:
    branches: [ main ]
    paths:
      - 'jo17_tactical_manager/lib/**'
      - 'jo17_tactical_manager/web/**'
      - 'jo17_tactical_manager/assets/**'
      - 'jo17_tactical_manager/pubspec.yaml'
      - 'jo17_tactical_manager/analysis_options.yaml'
      - 'jo17_tactical_manager/.github/workflows/deploy_web.yml'

jobs:
  build-and-deploy:
    name: Build and Deploy (Netlify)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    concurrency:
      group: deploy-web
      cancel-in-progress: true
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL_PROD }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_PROD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.dartServer
          key: ${{ runner.os }}-pub-${{ hashFiles('jo17_tactical_manager/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        working-directory: jo17_tactical_manager
        run: flutter pub get

      - name: Analyze
        working-directory: jo17_tactical_manager
        run: flutter analyze --fatal-infos

      - name: Run unit/widget tests (fast)
        working-directory: jo17_tactical_manager
        run: |
          flutter test -r expanded \
            test/models \
            test/providers \
            test/repositories \
            test/widgets \
            test/controllers \
            test/utils \
            test/hive \
            test/navigation \
            test/golden \
            test/performance

      - name: Build Web (release)
        working-directory: jo17_tactical_manager
        run: |
          flutter build web --release \
            --dart-define=FLUTTER_ENV=production \
            --dart-define=APP_MODE=saas \
            --dart-define=SUPABASE_URL=${SUPABASE_URL} \
            --dart-define=SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}

      - name: Install Netlify CLI
        run: |
          npm i -g netlify-cli

      - name: Deploy to Netlify (production)
        working-directory: jo17_tactical_manager
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy --prod --dir=build/web \
            --site "$NETLIFY_SITE_ID" \
            --message "CI deploy ${GITHUB_SHA}"


