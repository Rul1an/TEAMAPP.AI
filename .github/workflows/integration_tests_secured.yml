name: Integration Tests (secured)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'jo17_tactical_manager/supabase/migrations/**'
      - 'jo17_tactical_manager/.github/workflows/integration_tests_secured.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'jo17_tactical_manager/supabase/migrations/**'
      - 'jo17_tactical_manager/.github/workflows/integration_tests_secured.yml'

jobs:
  integration:
    name: Integration (preview)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: supabase-migrations-preview
      cancel-in-progress: false

    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF_PREVIEW }}
      DB_URL: ${{ secrets.SUPABASE_DB_URL_PREVIEW }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL_PREVIEW }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_PREVIEW }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Check Supabase Secrets
        run: |
          set -e
          if [ -z "${SUPABASE_ACCESS_TOKEN}" ] || [ -z "${PROJECT_REF}" ]; then
            echo "Supabase secrets missing!" >&2
            exit 1
          fi
          if [ -z "${SUPABASE_URL}" ] || [ -z "${SUPABASE_ANON_KEY}" ]; then
            echo "Supabase URL/ANON key missing!" >&2
            exit 1
          fi
          echo "Secrets OK for preview"

      - name: Supabase Login
        run: supabase login --token "$SUPABASE_ACCESS_TOKEN"

      - name: Supabase Link (best-effort)
        run: supabase link --project-ref "$PROJECT_REF" || true

      - name: Configure remote DB URL (prefer pooler or direct)
        if: ${{ env.DB_URL != '' }}
        run: supabase db remote set "$DB_URL" || true

      - name: Push DB migrations (retry on transient SASL errors)
        run: |
          set +e
          for i in 1 2 3; do
            echo "Attempt #$i: supabase db push"
            supabase db push && break
            status=$?
            echo "supabase db push failed with exit $status. Sleeping before retry..."
            sleep 20
          done
          exit 0

      - name: Export App Secrets (for networked tests)
        run: |
          echo "SUPABASE_URL=${SUPABASE_URL}" >> $GITHUB_ENV
          echo "SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}" >> $GITHUB_ENV

      - name: Flutter Pub Get
        working-directory: jo17_tactical_manager
        run: flutter pub get

      - name: Dart-only Security Tests (network)
        working-directory: jo17_tactical_manager
        run: |
          dart --version
          # Run only the portable, dart-only suites to avoid PKCE/storage issues
          dart test -r expanded test/security/minimal_database_audit_test.dart test/security/database_audit_phase2_live_validation_test.dart || true

      - name: Flutter Unit Tests (no e2e)
        working-directory: jo17_tactical_manager
        run: |
          # Run only safe unit/widget suites (exclude live integration & prod net tests)
          flutter test -r expanded \
            test/models \
            test/providers \
            test/repositories \
            test/widgets \
            test/controllers \
            test/utils \
            test/hive \
            test/navigation \
            test/golden \
            test/performance || true


