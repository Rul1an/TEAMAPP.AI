name: docs-snippets

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

on:
  pull_request:
    paths:
      - 'docs/**.md'
      - 'jo17_tactical_manager/docs/**.md'
      - '**/*.dart'
      - '.github/workflows/docs-snippets.yml'
  push:
    branches: [main]
    paths:
      - 'docs/**.md'
      - 'jo17_tactical_manager/docs/**.md'
      - '**/*.dart'
      - '.github/workflows/docs-snippets.yml'

jobs:
  validate-snippets:
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/setup-flutter
        with:
          flutter-version: 'stable'
          project-path: .
      - name: Install snippets tool
        run: |
          dart pub global activate snippets 0.4.3
      - name: Validate documentation snippets (disabled)
        if: ${{ false }}  # voorlopig uitschakelen â€“ pas activeren zodra er echte Dart {@tool snippet} blokken zijn
        shell: bash
        run: |
          set -euo pipefail
          echo "Working directory: $(pwd)"
          echo "Listing root contents..."
          ls -al
          echo "Checking for documentation directories..."
          if [ -d jo17_tactical_manager/docs ]; then
            echo "Found jo17_tactical_manager/docs"
            DOC_DIR="jo17_tactical_manager/docs"
          elif [ -d docs ]; then
            echo "Found docs/ at repository root"
            DOC_DIR="docs"
          else
            echo "No docs directory found, skipping snippet validation."
            exit 0
          fi

          echo "Using documentation directory: $DOC_DIR"
          ls -al "$DOC_DIR" || true

          # Skip if directory contains no Markdown files (recursively checks subfolders)
          if ! find "$DOC_DIR" -type f -name '*.md' | grep -q .; then
            echo "No markdown files found in $DOC_DIR or its subdirectories. Skipping snippet validation."
            exit 0
          fi
          mkdir -p build/snippets
          set -x
          INPUT_PATH="$(realpath "$DOC_DIR")"
          echo "Resolved absolute input path: $INPUT_PATH"
          snippets --input "$INPUT_PATH" --output build/snippets
          set +x
