apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: retrain-model-pipeline
  labels:
    app.kubernetes.io/part-of: mlops
    mlops/phase: retrain
spec:
  entrypoint: retrain-flow
  arguments:
    parameters:
      - name: model-name
        description: Name of the model to retrain
      - name: data-snapshot
        description: GCS/MinIO path to training data snapshot
  templates:
    - name: retrain-flow
      dag:
        tasks:
          - name: preprocess
            template: data-preprocess
          - name: train
            template: train-model
            dependencies: [preprocess]
          - name: evaluate
            template: evaluate-model
            dependencies: [train]
          - name: scan-vulnerabilities
            template: trivy-scan
            dependencies: [train]
          - name: register
            template: register-model
            dependencies: [evaluate, scan-vulnerabilities]
          - name: notify
            template: slack-notify
            dependencies: [register]

    # --- Template definitions ---
    - name: data-preprocess
      container:
        image: python:3.12-slim
        command: ["bash", "-c"]
        args:
          - |
            pip install -q pandas==3.0.1 pyarrow==16.1.0 && \
            python - <<'PY'
            import os, sys, pandas as pd
            # Stub: Replace with actual logic to pull data snapshot and preprocess
            print('Preprocessing data ...')
            PY
      resources:
        requests:
          cpu: 500m
          memory: 512Mi

    - name: train-model
      container:
        image: ghcr.io/our-org/ml-train:2025.07
        command: ["python", "train.py"]
        env:
          - name: MODEL_NAME
            value: "{{workflow.parameters.model-name}}"
          - name: DATA_PATH
            value: "{{workflow.parameters.data-snapshot}}"
      resources:
        limits:
          nvidia.com/gpu: 1
        requests:
          cpu: "4"
          memory: 8Gi

    - name: evaluate-model
      container:
        image: ghcr.io/our-org/ml-eval:2025.07
        command: ["python", "evaluate.py"]
        env:
          - name: MODEL_NAME
            value: "{{workflow.parameters.model-name}}"
      resources:
        requests:
          cpu: 1000m
          memory: 1Gi

    - name: trivy-scan
      container:
        image: aquasec/trivy:0.49.1
        command: ["trivy", "image", "--exit-code", "0", "ghcr.io/our-org/ml-train:2025.07"]
        resources:
          requests:
            cpu: 100m
            memory: 256Mi

    - name: register-model
      container:
        image: ghcr.io/our-org/wandb-cli:latest
        command: ["wandb", "models", "create"]
        env:
          - name: MODEL_NAME
            value: "{{workflow.parameters.model-name}}"
      resources:
        requests:
          cpu: 200m
          memory: 256Mi

    - name: slack-notify
      container:
        image: curlimages/curl:8.8.0
        command: ["sh", "-c"]
        args:
          - |
            curl -X POST -H 'Content-type: application/json' --data '{"text":"Retraining pipeline for {{workflow.parameters.model-name}} completed."}' $SLACK_WEBHOOK_URL
      env:
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: slack-webhook
              key: url
      resources:
        requests:
          cpu: 50m
          memory: 64Mi